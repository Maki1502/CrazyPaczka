Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/dataSources/.gitignore
rename from .idea/.gitignore
rename to .idea/dataSources/.gitignore
--- a/.idea/.gitignore	(revision 9856b30318bacbc74bee1534ca1f7346fc028115)
+++ b/.idea/dataSources/.gitignore	(date 1612940846515)
@@ -1,5 +1,5 @@
 # Default ignored files
-/shelf/
+/.idea/shelf/
 /workspace.xml
 # Datasource local storage ignored files
 /../../../../../:\IntelliJ\projects\CrazyPaczka\.idea/dataSources/
Index: src/main/java/edu/ib/AdminController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.ib;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.sql.SQLException;\r\nimport java.util.ResourceBundle;\r\n\r\nimport javafx.beans.property.*;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.stage.Stage;\r\n\r\npublic class AdminController {\r\n\r\n    @FXML\r\n    private ResourceBundle resources;\r\n\r\n    @FXML\r\n    private URL location;\r\n\r\n    @FXML\r\n    private TextField adminName;\r\n\r\n    @FXML\r\n    private PasswordField AdminPasswordCode;\r\n\r\n    @FXML\r\n    private Button btnAdminLogIn;\r\n\r\n    @FXML\r\n    private Button btnAdminLogOut;\r\n\r\n    @FXML\r\n    private TextArea AdminConsoleArea;\r\n\r\n    @FXML\r\n    private TextField findIdPackage;\r\n\r\n    @FXML\r\n    private TextField deleteIdPackage;\r\n\r\n    @FXML\r\n    private Button btnFindIdPackage;\r\n\r\n    @FXML\r\n    private Button btnDeleteIdPackage;\r\n\r\n    @FXML\r\n    private TableView<PackageView> packageTable;\r\n\r\n    @FXML\r\n    private TableColumn<PackageView, IntegerProperty> idCol;\r\n\r\n    @FXML\r\n    private TableColumn<PackageView, StringProperty> shipDateCol;\r\n\r\n    @FXML\r\n    private TableColumn<PackageView, StringProperty> recDateCol;\r\n\r\n    @FXML\r\n    private TableColumn<PackageView, IntegerProperty> sendCol;\r\n\r\n    @FXML\r\n    private TableColumn<PackageView, StringProperty> recCol;\r\n\r\n    @FXML\r\n    private TableColumn<PackageView, StringProperty> fromCol;\r\n\r\n    @FXML\r\n    private TableColumn<PackageView, StringProperty> toCol;\r\n\r\n    @FXML\r\n    private TableColumn<PackageView, DoubleProperty> priceCol;\r\n\r\n    @FXML\r\n    private TableColumn<PackageView, ObjectProperty> statusCol;\r\n\r\n    @FXML\r\n    private TextField findIdUser;\r\n\r\n    @FXML\r\n    private TextField deleteIdUser;\r\n\r\n    @FXML\r\n    private Button btnFindIdUser;\r\n\r\n    @FXML\r\n    private Button btnDeleteIdUser;\r\n\r\n    @FXML\r\n    private TableView<UserView> packageTable1;\r\n\r\n    @FXML\r\n    private TableColumn<UserView, IntegerProperty> userIdCol;\r\n\r\n    @FXML\r\n    private TableColumn<UserView, StringProperty> nameCol;\r\n\r\n    @FXML\r\n    private TableColumn<UserView, StringProperty> surnameCol;\r\n\r\n    @FXML\r\n    private TableColumn<UserView, StringProperty> cityCol;\r\n\r\n    @FXML\r\n    private TableColumn<UserView, StringProperty> mailCol;\r\n\r\n    @FXML\r\n    private TableColumn<UserView, StringProperty> phoneCol;\r\n\r\n    private DBUtil dbUtil;\r\n    private PaczkiDAO paczkiDAO;\r\n\r\n    private static Scene scenePackage;\r\n    Stage stage = new Stage();\r\n\r\n    @FXML\r\n    void onBtnDeleteIdPackage(ActionEvent event) {\r\n        //work in progress\r\n    }\r\n\r\n    @FXML\r\n    void onBtnDeleteIdUser(ActionEvent event) {\r\n        //work in progress\r\n    }\r\n\r\n    @FXML\r\n    void onBtnFindIdPackage(ActionEvent event) throws SQLException, ClassNotFoundException{\r\n        try{\r\n            if(!findIdPackage.getText().equals(null)){\r\n                packageTable.getItems().clear();\r\n                ObservableList<PackageView> wineData = paczkiDAO.findAdminPackage(findIdPackage.getText());\r\n                packageTable.setItems(wineData);\r\n                packageTable.setPlaceholder(new Label(\"No data to display\"));\r\n            }\r\n        }catch (SQLException e){\r\n            AdminConsoleArea.appendText(\"Error 200 \\n\");\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onBtnFindIdUser(ActionEvent event) throws SQLException, ClassNotFoundException{\r\n        try{\r\n            if(!findIdUser.getText().equals(null)){\r\n                packageTable1.getItems().clear();\r\n                ObservableList<UserView> wineData = paczkiDAO.findAdminClients(findIdUser.getText());\r\n                packageTable1.setItems(wineData);\r\n                packageTable1.setPlaceholder(new Label(\"No data to display\"));\r\n            }\r\n        }catch (SQLException e){\r\n            AdminConsoleArea.appendText(\"Error 100 \\n\");\r\n            throw e;\r\n        }\r\n    }\r\n    UserView userView = new UserView();\r\n\r\n    @FXML\r\n    void onBtnLogIn(ActionEvent event) throws SQLException, ClassNotFoundException {\r\n        dbUtil = new DBUtil(adminName.getText(), AdminPasswordCode.getText(), AdminConsoleArea);\r\n        paczkiDAO = new PaczkiDAO(dbUtil, AdminConsoleArea);\r\n\r\n        dbUtil.dbConnect();\r\n\r\n        AdminConsoleArea.appendText(\"Access granted for user \\\"\"+adminName.getText()+\"\\\".\"+\"\\n\");\r\n        btnAdminLogIn.setDisable(true);\r\n        btnAdminLogOut.setDisable(false);\r\n\r\n        findIdPackage.setDisable(false);\r\n        deleteIdPackage.setDisable(false);\r\n        btnFindIdPackage.setDisable(false);\r\n        btnDeleteIdPackage.setDisable(false);\r\n        packageTable.setDisable(false);\r\n        findIdUser.setDisable(false);\r\n        deleteIdUser.setDisable(false);\r\n        btnFindIdUser.setDisable(false);\r\n        deleteIdUser.setDisable(false);\r\n        btnDeleteIdUser.setDisable(false);\r\n        packageTable1.setDisable(false);\r\n\r\n       try{\r\n            packageTable.getItems().clear();\r\n            packageTable1.getItems().clear();\r\n\r\n            ObservableList<UserView> viewUserAdmin = paczkiDAO.showAdminClients();\r\n            ObservableList<PackageView> viewPackageAdmin = paczkiDAO.showAdminPackage();\r\n\r\n            packageTable.setItems(viewPackageAdmin);\r\n            packageTable1.setItems(viewUserAdmin);\r\n\r\n            packageTable.setPlaceholder(new Label(\"No data to display\"));\r\n            packageTable1.setPlaceholder(new Label(\"No data to display\"));\r\n\r\n        }catch (SQLException e){\r\n            AdminConsoleArea.appendText(\"Error occurred while getting data from DB. \\n\");\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onBtnLogOut(ActionEvent event) throws IOException, SQLException {\r\n\r\n        dbUtil.dbDisconnect();\r\n        btnAdminLogIn.setDisable(false);\r\n\r\n        btnAdminLogOut.setDisable(true);\r\n        findIdPackage.setDisable(true);\r\n        deleteIdPackage.setDisable(true);\r\n        btnFindIdPackage.setDisable(true);\r\n        btnDeleteIdPackage.setDisable(true);\r\n        packageTable.setDisable(true);\r\n        findIdUser.setDisable(true);\r\n        deleteIdUser.setDisable(true);\r\n        btnFindIdUser.setDisable(true);\r\n        deleteIdUser.setDisable(true);\r\n        btnDeleteIdUser.setDisable(true);\r\n        packageTable1.setDisable(true);\r\n\r\n\r\n        scenePackage = new Scene(loadFXML(\"/fxml/mainScreen\"), 600, 400);\r\n        stage.setScene(scenePackage);\r\n        stage.setTitle(\"Main screen\");\r\n        stage.show();\r\n        ((Node)(event.getSource())).getScene().getWindow().hide();\r\n\r\n    }\r\n\r\n    @FXML\r\n    void initialize() {\r\n        assert adminName != null : \"fx:id=\\\"adminName\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert AdminPasswordCode != null : \"fx:id=\\\"AdminPasswordCode\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert btnAdminLogIn != null : \"fx:id=\\\"btnAdminLogIn\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert btnAdminLogOut != null : \"fx:id=\\\"btnAdminLogOut\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert AdminConsoleArea != null : \"fx:id=\\\"AdminConsoleArea\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert findIdPackage != null : \"fx:id=\\\"findIdPackage\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert deleteIdPackage != null : \"fx:id=\\\"deleteIdPackage\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert btnFindIdPackage != null : \"fx:id=\\\"btnFindIdPackage\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert btnDeleteIdPackage != null : \"fx:id=\\\"btnDeleteIdPackage\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert packageTable != null : \"fx:id=\\\"packageTable\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert idCol != null : \"fx:id=\\\"idCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert shipDateCol != null : \"fx:id=\\\"shipDateCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert recDateCol != null : \"fx:id=\\\"recDateCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert sendCol != null : \"fx:id=\\\"sendCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert recCol != null : \"fx:id=\\\"recCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert fromCol != null : \"fx:id=\\\"fromCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert toCol != null : \"fx:id=\\\"toCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert priceCol != null : \"fx:id=\\\"priceCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert statusCol != null : \"fx:id=\\\"statusCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert findIdUser != null : \"fx:id=\\\"findIdUser\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert deleteIdUser != null : \"fx:id=\\\"deleteIdUser\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert btnFindIdUser != null : \"fx:id=\\\"btnFindIdUser\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert btnDeleteIdUser != null : \"fx:id=\\\"btnDeleteIdUser\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert packageTable1 != null : \"fx:id=\\\"packageTable1\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert userIdCol != null : \"fx:id=\\\"userIdCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert nameCol != null : \"fx:id=\\\"nameCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert surnameCol != null : \"fx:id=\\\"surnameCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert cityCol != null : \"fx:id=\\\"cityCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert mailCol != null : \"fx:id=\\\"mailCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n        assert phoneCol != null : \"fx:id=\\\"phoneCol\\\" was not injected: check your FXML file 'techScreen.fxml'.\";\r\n\r\n\r\n        btnAdminLogOut.setDisable(true);\r\n        findIdPackage.setDisable(true);\r\n        deleteIdPackage.setDisable(true);\r\n        btnFindIdPackage.setDisable(true);\r\n        btnDeleteIdPackage.setDisable(true);\r\n        packageTable.setDisable(true);\r\n        findIdUser.setDisable(true);\r\n        deleteIdUser.setDisable(true);\r\n        btnFindIdUser.setDisable(true);\r\n        deleteIdUser.setDisable(true);\r\n        btnDeleteIdUser.setDisable(true);\r\n        packageTable1.setDisable(true);\r\n\r\n    }\r\n\r\n    private static Parent loadFXML(String fxml) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(PaczkaApp.class.getResource(fxml + \".fxml\"));\r\n        return fxmlLoader.load();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/edu/ib/AdminController.java b/src/main/java/edu/ib/AdminController.java
--- a/src/main/java/edu/ib/AdminController.java	(revision 9856b30318bacbc74bee1534ca1f7346fc028115)
+++ b/src/main/java/edu/ib/AdminController.java	(date 1612946007716)
@@ -148,12 +148,11 @@
     @FXML
     void onBtnFindIdUser(ActionEvent event) throws SQLException, ClassNotFoundException{
         try{
-            if(!findIdUser.getText().equals(null)){
                 packageTable1.getItems().clear();
                 ObservableList<UserView> wineData = paczkiDAO.findAdminClients(findIdUser.getText());
                 packageTable1.setItems(wineData);
                 packageTable1.setPlaceholder(new Label("No data to display"));
-            }
+
         }catch (SQLException e){
             AdminConsoleArea.appendText("Error 100 \n");
             throw e;
@@ -229,7 +228,12 @@
         ((Node)(event.getSource())).getScene().getWindow().hide();
 
     }
-
+    private void populateOrdersToFirstTable(ObservableList<PackageView> packageData) {
+        packageTable.setItems(packageData);
+    }
+    private void populateOrdersToSecondTable(ObservableList<UserView> userData) {
+        packageTable1.setItems(userData);
+    }
     @FXML
     void initialize() {
         assert adminName != null : "fx:id=\"adminName\" was not injected: check your FXML file 'techScreen.fxml'.";
Index: src/main/java/edu/ib/PaczkiDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.ib;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.scene.control.TextArea;\r\n\r\nimport java.sql.*;\r\n\r\npublic class PaczkiDAO {\r\n\r\n    private DBUtil dbUtil;\r\n    private TextArea consoleTextArea;\r\n\r\n    public PaczkiDAO(DBUtil dbUtil, TextArea consoleTextArea) {\r\n        this.dbUtil = dbUtil;\r\n        this.consoleTextArea = consoleTextArea;\r\n    }\r\n\r\n    /*private ObservableList<Automats> getAutomatsList(ResultSet rs) throws SQLException{\r\n        ObservableList<Automats> automatsList = FXCollections.observableArrayList();\r\n\r\n        while(rs.next()){\r\n            Automats a = new Automats();\r\n            a.setAddress(rs.getString(\"automat_address\"));\r\n            a.setsAmount(rs.getInt(\"S_lockers_amount\"));\r\n            a.setmAmount(rs.getInt(\"M_lockers_amount\"));\r\n            a.setlAmount(rs.getInt(\"L_lockers_amount\"));\r\n        }\r\n        return automatsList;\r\n    }*/\r\n\r\n    /*private ObservableList<Clients> getSendersList(ResultSet rs) throws SQLException{\r\n\r\n        ObservableList<Clients> sendersList = FXCollections.observableArrayList();\r\n\r\n        while(rs.next()){\r\n\r\n            Clients s = new Clients();\r\n            s.setId(rs.getInt(\"client_id\"));\r\n            s.setName(rs.getString(\"client_name\"));\r\n            s.setSurname(rs.getString(\"client_surname\"));\r\n            s.setAddress(rs.getString(\"client_address\"));\r\n            s.setEmail(rs.getString(\"client_email\"));\r\n            s.setPhone_number(rs.getString(\"client_phone_number\"));\r\n            s.setPassword(rs.getString(\"client_password\"));\r\n            sendersList.add(s);\r\n        }\r\n        return sendersList;\r\n    }*/\r\n\r\n    private ObservableList<CustomerView> getCustomerView(ResultSet rs) throws SQLException{\r\n\r\n        ObservableList<CustomerView> customerViews = FXCollections.observableArrayList();\r\n\r\n        while (rs.next()){\r\n\r\n            CustomerView cv = new CustomerView();\r\n            cv.setId(rs.getInt(\"ID\"));\r\n            cv.setName(rs.getString(\"recipient\"));\r\n            cv.setStatus(rs.getObject(\"ShipmentStatus\"));\r\n            cv.setConsDate(rs.getString(\"ConsignmentDate\"));\r\n            cv.setRecDate(rs.getString(\"ReceptionDate\"));\r\n            cv.setSize(rs.getObject(\"Size\"));\r\n            cv.setAddress(rs.getString(\"s.automat_address\"));\r\n            customerViews.add(cv);\r\n        }\r\n        return customerViews;\r\n    }\r\n\r\n    private ObservableList<UserView> getUsers(ResultSet rs) throws SQLException{\r\n\r\n        ObservableList<UserView> sendersList = FXCollections.observableArrayList();\r\n\r\n        while(rs.next()){\r\n\r\n           UserView u = new UserView();\r\n            u.setId(rs.getInt(\"ID\"));\r\n            u.setName(rs.getString(\"clName\"));\r\n            u.setSurname(rs.getString(\"clSurname\"));\r\n            u.setAddress(rs.getString(\"address\"));\r\n            u.setEmail(rs.getString(\"mail\"));\r\n            u.setPhone_number(rs.getString(\"PhNumber\"));\r\n            sendersList.add(u);\r\n        }\r\n        return sendersList;\r\n    }\r\n\r\n    private ObservableList<PackageView> getPackages(ResultSet rs) throws SQLException{\r\n\r\n        ObservableList<PackageView> packageViews = FXCollections.observableArrayList();\r\n        while (rs.next()){\r\n            PackageView p = new PackageView();\r\n            p.setId(rs.getInt(\"ID\"));\r\n            p.setConsDate(rs.getString(\"ConsDate\"));\r\n            p.setRecDate(rs.getString(\"RecDate\"));\r\n            p.setClId(rs.getInt(\"SenderId\"));\r\n            p.setRecId(rs.getString(\"ReceiverId\"));\r\n            p.setPrice(rs.getDouble(\"Price\"));\r\n            p.setStatus(rs.getObject(\"packStatus\"));\r\n            packageViews.add(p);\r\n        }\r\n        return packageViews;\r\n    }\r\n\r\n    /*private ObservableList<Shipments> getShipmentsList(ResultSet rs) throws SQLException{\r\n        ObservableList<Shipments> shipmentsList = FXCollections.observableArrayList();\r\n\r\n        while(rs.next()){\r\n            Shipments p = new Shipments();\r\n            p.setId(rs.getInt(\"shipment_id\"));\r\n            p.setSize(rs.getObject(\"shipment_package_size\"));\r\n            p.setPrice(rs.getDouble(\"shipment_price\"));\r\n            p.setSendPlace(rs.getString(\"shipment_sending_place\"));\r\n            p.setRecPlace(rs.getString(\"shipment_reception_place\"));\r\n            p.setStatus(rs.getObject(\"shipment_status\"));\r\n            p.setConsDate(rs.getString(\"shipment_consignment_date\"));\r\n            p.setShipDate(rs.getString(\"shipment_sending_date\"));\r\n            p.setDeliDate(rs.getString(\"shipment_delivery_date\"));\r\n            p.setRecDate(rs.getString(\"shipment_reception_date\"));\r\n            p.setRecId(rs.getInt(\"shipment_recipient_id\"));\r\n            p.setClientId(rs.getInt(\"client_id\"));\r\n            p.setAutoAddress(rs.getString(\"automat_address\"));\r\n        }\r\n        return shipmentsList;\r\n    }*/\r\n\r\n\r\n    public ObservableList<CustomerView> showClientData() throws SQLException, ClassNotFoundException{\r\n        String selectStmt = \"SELECT * FROM CustomerView;\";\r\n        try{\r\n            ResultSet resultSet = dbUtil.dbExecuteQuery(selectStmt);\r\n\r\n            ObservableList<CustomerView> customerViews = getCustomerView(resultSet);\r\n            consoleTextArea.appendText(selectStmt+\"\\n\");\r\n\r\n            printResultSet(resultSet);\r\n\r\n            return customerViews;\r\n        }catch (SQLException e){\r\n            consoleTextArea.appendText(\"Error \\n\");\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    public ObservableList<CustomerView> findClientByData(String findData) throws SQLException, ClassNotFoundException{\r\n        String selectStmt = \"SELECT * FROM CustomerView WHERE ConsignmentDate like %'\"+findData+\"%' OR ReceptionDate like %'\"+findData+\"%';\";\r\n        try{\r\n            ResultSet resultSet = dbUtil.dbExecuteQuery(selectStmt);\r\n\r\n            ObservableList<CustomerView> customerViews = getCustomerView(resultSet);\r\n            consoleTextArea.appendText(selectStmt+\"\\n\");\r\n\r\n            printResultSet(resultSet);\r\n\r\n            return customerViews;\r\n        }catch (SQLException e){\r\n            consoleTextArea.appendText(\"Error \\n\");\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    public ObservableList<CustomerView> findClientByStatus(String findStatus) throws SQLException, ClassNotFoundException{\r\n        String selectStmt = \"SELECT * FROM CustomerView WHERE ShipmentStatus like %'\"+findStatus+\"%';\";\r\n        try{\r\n            ResultSet resultSet = dbUtil.dbExecuteQuery(selectStmt);\r\n\r\n            ObservableList<CustomerView> customerViews = getCustomerView(resultSet);\r\n            consoleTextArea.appendText(selectStmt+\"\\n\");\r\n\r\n            printResultSet(resultSet);\r\n\r\n            return customerViews;\r\n        }catch (SQLException e){\r\n            consoleTextArea.appendText(\"Error \\n\");\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    public ObservableList<UserView> showAdminClients() throws SQLException, ClassNotFoundException{\r\n        String selectStmt = \"SELECT * FROM AdminViewUser;\";\r\n        try{\r\n            ResultSet resultSet = dbUtil.dbExecuteQuery(selectStmt);\r\n\r\n            ObservableList<UserView> clientsList = getUsers(resultSet);\r\n            consoleTextArea.appendText(selectStmt+\"\\n\");\r\n\r\n            printResultSet(resultSet);\r\n\r\n            return clientsList;\r\n        }catch (SQLException e){\r\n            consoleTextArea.appendText(\"Error1 \\n\");\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    public ObservableList<UserView> findAdminClients(String findUser) throws SQLException, ClassNotFoundException{\r\n        String selectStmt = \"SELECT * FROM AdminViewUser WHERE ID like \"+findUser+\";\";\r\n        try{\r\n            ResultSet resultSet = dbUtil.dbExecuteQuery(selectStmt);\r\n            ObservableList<UserView> clientsList = getUsers(resultSet);\r\n            consoleTextArea.appendText(selectStmt+\"\\n\");\r\n            printResultSet(resultSet);\r\n\r\n            return clientsList;\r\n        }catch (SQLException e){\r\n            consoleTextArea.appendText(\"Error1.2 \\n\");\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    public ObservableList<PackageView> showAdminPackage() throws SQLException, ClassNotFoundException{\r\n        String selectStmt = \"SELECT * FROM AdminViewPackage;\";\r\n        try{\r\n            ResultSet resultSet = dbUtil.dbExecuteQuery(selectStmt);\r\n            ObservableList<PackageView> packageViews = getPackages(resultSet);\r\n            consoleTextArea.appendText(selectStmt+\"\\n\");\r\n\r\n            return packageViews;\r\n        }catch (SQLException e){\r\n            consoleTextArea.appendText(\"Error2 \\n\");\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    public ObservableList<PackageView> findAdminPackage(String findPackage) throws SQLException, ClassNotFoundException{\r\n        String selectStmt = \"SELECT * FROM AdminViewPackage WHERE ID like '%\"+findPackage+\"%';\";\r\n        try{\r\n            ResultSet resultSet = dbUtil.dbExecuteQuery(selectStmt);\r\n            ObservableList<PackageView> packageViews = getPackages(resultSet);\r\n            consoleTextArea.appendText(selectStmt+\"\\n\");\r\n\r\n            return packageViews;\r\n        }catch (SQLException e){\r\n            consoleTextArea.appendText(\"Error2.2 \\n\");\r\n            throw e;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    public static void printResultSet(ResultSet resultSet) throws SQLException {\r\n\r\n        ResultSetMetaData rsmd = resultSet.getMetaData(); // metadane o zapytaniu\r\n        int columnsNumber = rsmd.getColumnCount(); // liczba kolumn\r\n        resultSet.beforeFirst();\r\n        while (resultSet.next()) {  // wyswietlenie nazw kolumn i wartosci w rzedach\r\n\r\n            for (int i = 1; i <= columnsNumber; i++) {\r\n\r\n                if (i > 1)\r\n                    System.out.print(\",  \");\r\n\r\n                String columnValue = resultSet.getString(i);\r\n                System.out.print(rsmd.getColumnName(i) + \": \" + columnValue);\r\n            }\r\n\r\n            System.out.println(\"\");\r\n        }\r\n\r\n        System.out.println(\"\");\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/edu/ib/PaczkiDAO.java b/src/main/java/edu/ib/PaczkiDAO.java
--- a/src/main/java/edu/ib/PaczkiDAO.java	(revision 9856b30318bacbc74bee1534ca1f7346fc028115)
+++ b/src/main/java/edu/ib/PaczkiDAO.java	(date 1612945351005)
@@ -2,6 +2,7 @@
 
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
+import javafx.scene.control.TableView;
 import javafx.scene.control.TextArea;
 
 import java.sql.*;
@@ -237,9 +238,6 @@
     }
 
 
-
-
-
     public static void printResultSet(ResultSet resultSet) throws SQLException {
 
         ResultSetMetaData rsmd = resultSet.getMetaData(); // metadane o zapytaniu
Index: .idea/dataSources.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DataSourceManagerImpl\" format=\"xml\" multifile-model=\"true\">\r\n    <data-source source=\"LOCAL\" name=\"MySQL - paczkomat@localhost\" uuid=\"cbcb222d-85a7-4b85-9b68-2a63910e0359\">\r\n      <driver-ref>mysql.8</driver-ref>\r\n      <synchronize>true</synchronize>\r\n      <jdbc-driver>com.mysql.cj.jdbc.Driver</jdbc-driver>\r\n      <jdbc-url>jdbc:mysql://localhost:3306/paczkomat</jdbc-url>\r\n      <working-dir>$ProjectFileDir$</working-dir>\r\n      <driver-properties>\r\n        <property name=\"serverTimezone\" value=\"CET\" />\r\n      </driver-properties>\r\n    </data-source>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.xml b/.idea/dataSources.xml
--- a/.idea/dataSources.xml	(revision 9856b30318bacbc74bee1534ca1f7346fc028115)
+++ b/.idea/dataSources.xml	(date 1612941865169)
@@ -1,14 +1,14 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
-    <data-source source="LOCAL" name="MySQL - paczkomat@localhost" uuid="cbcb222d-85a7-4b85-9b68-2a63910e0359">
+    <data-source source="LOCAL" name="paczkomat@localhost" uuid="5c40d8da-3bf7-4184-b2a9-35f2651415b2">
       <driver-ref>mysql.8</driver-ref>
       <synchronize>true</synchronize>
       <jdbc-driver>com.mysql.cj.jdbc.Driver</jdbc-driver>
       <jdbc-url>jdbc:mysql://localhost:3306/paczkomat</jdbc-url>
       <working-dir>$ProjectFileDir$</working-dir>
       <driver-properties>
-        <property name="serverTimezone" value="CET" />
+        <property name="serverTimezone" value="UTC" />
       </driver-properties>
     </data-source>
   </component>
Index: .idea/dataSources/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources/compiler.xml b/.idea/dataSources/compiler.xml
new file mode 100644
--- /dev/null	(date 1612941527963)
+++ b/.idea/dataSources/compiler.xml	(date 1612941527963)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="CrazyPaczka" />
+      </profile>
+    </annotationProcessing>
+  </component>
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="CrazyPaczka" options="--add-exports java.sql.rowset/com.sun.rowset=ALL-UNNAMED" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/dataSources/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources/jarRepositories.xml b/.idea/dataSources/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1612121076069)
+++ b/.idea/dataSources/jarRepositories.xml	(date 1612121076069)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/dataSources/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources/misc.xml b/.idea/dataSources/misc.xml
new file mode 100644
--- /dev/null	(date 1612121076069)
+++ b/.idea/dataSources/misc.xml	(date 1612121076069)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_15" project-jdk-name="15" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 9856b30318bacbc74bee1534ca1f7346fc028115)
+++ b/.idea/vcs.xml	(date 1612941816405)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/dataSources/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources/vcs.xml b/.idea/dataSources/vcs.xml
new file mode 100644
--- /dev/null	(date 1612121076070)
+++ b/.idea/dataSources/vcs.xml	(date 1612121076070)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/dataSources/dataSources.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources/dataSources.xml b/.idea/dataSources/dataSources.xml
new file mode 100644
--- /dev/null	(date 1612836328692)
+++ b/.idea/dataSources/dataSources.xml	(date 1612836328692)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
+    <data-source source="LOCAL" name="MySQL - paczkomat@localhost" uuid="cbcb222d-85a7-4b85-9b68-2a63910e0359">
+      <driver-ref>mysql.8</driver-ref>
+      <synchronize>true</synchronize>
+      <jdbc-driver>com.mysql.cj.jdbc.Driver</jdbc-driver>
+      <jdbc-url>jdbc:mysql://localhost:3306/paczkomat</jdbc-url>
+      <working-dir>$ProjectFileDir$</working-dir>
+      <driver-properties>
+        <property name="serverTimezone" value="CET" />
+      </driver-properties>
+    </data-source>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"CrazyPaczka\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n  </component>\r\n  <component name=\"JavacSettings\">\r\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\r\n      <module name=\"CrazyPaczka\" options=\"--add-exports java.sql.rowset/com.sun.rowset=ALL-UNNAMED\" />\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision 9856b30318bacbc74bee1534ca1f7346fc028115)
+++ b/.idea/compiler.xml	(date 1612941828592)
@@ -1,15 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="CompilerConfiguration">
-    <annotationProcessing>
-      <profile name="Maven default annotation processors profile" enabled="true">
-        <sourceOutputDir name="target/generated-sources/annotations" />
-        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
-        <outputRelativeToContentRoot value="true" />
-        <module name="CrazyPaczka" />
-      </profile>
-    </annotationProcessing>
-  </component>
   <component name="JavacSettings">
     <option name="ADDITIONAL_OPTIONS_OVERRIDE">
       <module name="CrazyPaczka" options="--add-exports java.sql.rowset/com.sun.rowset=ALL-UNNAMED" />
diff --git a/.idea/uiDesigner.xml b/.idea/dataSources/uiDesigner.xml
rename from .idea/uiDesigner.xml
rename to .idea/dataSources/uiDesigner.xml
